/*
 * Copyright (c) 2021 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define NAV_L 1
#define OTH_L 2
#define NUM_L 3
#define SYM_L 4
#define FUN_L 5
#define MED_L 6

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {
    combos {
        compatible = "zmk,combos";

        fn_mo {
	    timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&mo FUN_L>;
        };

        media_mo {
	    timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&mo MED_L>;
        };

	/*
        caps_word_combo {
	    timeout-ms = <50>;
            key-positions = <13 16>;
            bindings = <&caps_word>;
        };
	*/
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

#ifdef QWERTY_BASE
        qwerty_layer {
            label = "Qwerty";
            bindings = <
                &kp Q      &kp W      &kp E       &kp R          &kp T         &kp Y            &kp U          &kp I       &kp O      &kp P
                &hm LGUI A &hm LALT S &hm LCTRL D &hm LSHFT F    &kp G         &kp H            &hm RSHFT J    &hm RCTRL K &hm LALT L &hm LGUI QUOT
                &kp Z      &kp X      &kp C       &kp V          &kp B         &kp N            &kp M          &kp COMMA   &kp DOT    &kp FSLH
                                                  &lt NAV_L TAB  &lt OTH_L RET &lt NUM_L SPACE  &lt SYM_L BKSP
            >;
        };
#else
        magic_sturdy_layer {
            label = "magic_sturdy";
            bindings = <
                &kp X      &kp M      &kp L       &kp C          &kp P         &kp B            &kp QUOT          &kp U       &kp O      &kp Q
                &hm LSHFT S &hm LALT T &hm LGUI R &hm LCTRL D    &kp Y         &kp F            &hm RCTRL N    &hm RGUI E &hm RALT A &hm RSHFT I
                &kp V      &kp K      &kp J       &kp G          &kp W         &kp Z            &kp H          &kp COMMA   &kp DOT    &kp FSLH     
                                                  &lt NUM_L BKSP  &lt OTH_L SPACE &kp LSHFT   &mo NAV_L
            >;
        };
#endif

        nav_layer {
            label = "Nav";
            bindings = <
                &kp LG(Z)  &kp LG(X)  &kp LG(C)   &kp LG(V)   &kp LS(LG(Z))    &kp LS(LG(N5))  &trans      &kp LANG2     &kp LANG2     &trans
                &kp LARW   &kp UARW   &kp DARW    &kp RARW    &trans           &trans          &kp RCTRL   &kp RGUI      &kp RALT      &kp RSHFT
                &kp HOME   &kp PG_UP  &kp PG_DN   &kp END     &trans           &kp C_MUTE      &kp C_PP    &kp C_VOL_DN  &kp C_VOL_UP  &kp CAPS                     
                                                  &kp ESC     &kp TAB          &trans     &trans                 
            >;
        };

        other_layer {
            label = "Other";
            bindings = <
                &trans	   &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &bt BT_CLR
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &trans
                &trans     &trans     &trans      &trans          &trans       &bt BT_SEL 0     &bt BT_SEL 1   &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
                                                  &trans          &trans       &trans           &trans
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
                &kp QMARK  &kp LBKT    &kp RBKT    &kp COLON  &kp LC(F2)            &kp LS(SEMI)     &kp N7     &kp N8      &kp N9     &kp LS(QUOT)
                &kp LS(N6) &kp LS(N8)  &kp LS(N9)  &kp SEMI   &kp LS(N2)        &kp MINUS        &kp N4     &kp N5      &kp N6     &kp FSLH
                &kp LS(N2) &kp LS(N7)  &kp INT_RO  &kp EXCL   &kp LS(INT3)   &kp LS(MINUS)    &kp N1     &kp N2      &kp N3     &kp N0
                                                   &trans     &trans            &kp RET        &mo SYM_L  
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
                &kp GRAVE    &kp INT5    &kp INT4   &kp INT2  &trans   &kp LS(LA(N8)) &kp LS(N3)   &kp GT       &kp LT       &kp MINUS
                &trans       &trans      &trans     &trans    &trans   &kp LS(EQUAL)  &kp LS(5)    &kp LS(RBKT) &kp LS(NUHS) &kp LS(LBRC)
                &kp LANG5    &kp LANG3   &kp LANG4  &trans    &trans   &kp NUBS       &kp INT_YEN  &kp LS(N4)   &kp LA(N3)  &kp LS(LA(N2))
                                                     &trans   &trans   &trans         &trans
            >;
        };

        fun_layer {
            label = "Fun";
            bindings = <
                &trans          &trans         &trans      &trans     &trans    &kp PSCRN       &kp F9     &kp F10    &kp F11     &kp F12             
                &trans          &trans         &trans      &trans     &trans    &kp PAUSE_BREAK &kp F5     &kp F6     &kp F7      &kp F8           
                &trans          &trans         &trans      &trans     &trans    &kp SLCK        &kp F1     &kp F2     &kp F3      &kp F4       
                                                   &none      &none             &trans          &trans
            >;
        };
        media_layer {
            label = "Media";
            bindings = <
                &trans	   &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &trans
                &trans     &trans     &trans      &trans          &trans       &trans           &kp C_PREV     &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &trans
                                                  &trans          &trans       &kp C_PLAY_PAUSE &kp C_MUTE
            >;
        };
    };
};

