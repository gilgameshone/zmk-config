/*
 * Copyright (c) 2021 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define SDY_L 0
#define TRN_L 1
#define TRB_L 2
#define TRR_L 3
#define TRP_L 4
#define NAV_L 5
#define EXT_L 6
#define NUM_L 7
#define SYM_L 8
#define FUN_L 9
#define BLE_L 10

#define MG_X_L 11
#define MG_L_L 12
#define MG_U_L 13
#define MG_O_L 14

#define HYPER LS(LA(LG(LCTL)))
#define MEH(key) LS(LA(LC(key)))

// JIS

#include "jis.h"
#include "tron.h"

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

&sk {  // sticky-key config
    release-after-ms = <1000>;  // release after 0.6s
    quick-release;             // no double capitalization when rolling keys
};

/ {
  combos {
    compatible = "zmk,combos";
    caps_word_combo {
      timeout-ms = <50>;
      key-positions = <31 32>;
      bindings = <&caps_word>;
    };
    3thumb_left {
      timeout-ms = <50>;
      key-positions = <30 31>;
      bindings = <&mo FUN_L>;
    };    
    ble_mo {
      timeout-ms = <50>;
      key-positions = <9 19 29>;
      bindings = <&mo BLE_L>;
    };
  };

  macros {
  TJ_GI: tron_gi {
      label = "tron_gi";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap &kp TJ_KI>
        , <&macro_tap &kp TJ_DAKUTEN>
        ;
    };
  TJ_GE: tron_ge {
      label = "tron_ge";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap &kp TJ_KE>
        , <&macro_tap &kp TJ_DAKUTEN>
        ;
    };
  TJ_GU: tron_gu {
      label = "tron_gu";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap &kp TJ_KU>
        , <&macro_tap &kp TJ_DAKUTEN>
        ;
    };
  TJ_DZI: tron_dzi {
      label = "tron_dzi";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap &kp TJ_CHI>
        , <&macro_tap &kp TJ_DAKUTEN>
        ;
    };
  TJ_VU: tron_vu {
      label = "tron_vu";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap &kp TJ_U>
        , <&macro_tap &kp TJ_DAKUTEN>
        ;
    };
  TJ_JI: tron_ji {
      label = "tron_ji";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap &kp TJ_SHI>
        , <&macro_tap &kp TJ_DAKUTEN>
        ;
    };
  TJ_ZU: tron_zu {
      label = "tron_zu";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap &kp TJ_SU>
        , <&macro_tap &kp TJ_DAKUTEN>
        ;
    };
  TJ_DZU: tron_dzu {
      label = "tron_dzu";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap &kp TJ_TSU>
        , <&macro_tap &kp TJ_DAKUTEN>
        ;
    };
  TJ_BI: tron_bi {
      label = "tron_bi";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap &kp TJ_HI>
        , <&macro_tap &kp TJ_DAKUTEN>
        ;
    };
  TJ_ZO: tron_zo {
      label = "tron_zo";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap &kp TJ_SO>
        , <&macro_tap &kp TJ_DAKUTEN>
        ;
    };
  TJ_GO: tron_go {
      label = "tron_go";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap &kp TJ_KO>
        , <&macro_tap &kp TJ_DAKUTEN>
        ;
    };
  TJ_BA: tron_ba {
      label = "tron_ba";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap &kp TJ_HA>
        , <&macro_tap &kp TJ_DAKUTEN>
        ;
    };
  TJ_BO: tron_bo {
      label = "tron_bo";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap &kp TJ_HO>
        , <&macro_tap &kp TJ_DAKUTEN>
        ;
    };
  TJ_DA: tron_da {
      label = "tron_da";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap &kp TJ_TA>
        , <&macro_tap &kp TJ_DAKUTEN>
        ;
    };
  TJ_DO: tron_do {
      label = "tron_do";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap &kp TJ_TO>
        , <&macro_tap &kp TJ_DAKUTEN>
        ;
    };
  TJ_GA: tron_ga {
      label = "tron_ga";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap &kp TJ_KA>
        , <&macro_tap &kp TJ_DAKUTEN>
        ;
    };
  TJ_DE: tron_de {
      label = "tron_de";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap &kp TJ_TE>
        , <&macro_tap &kp TJ_DAKUTEN>
        ;
    };
  TJ_BU: tron_bu {
      label = "tron_bu";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap &kp TJ_FU>
        , <&macro_tap &kp TJ_DAKUTEN>
        ;
    };
  TJ_ZE: tron_ze {
      label = "tron_ze";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap &kp TJ_SE>
        , <&macro_tap &kp TJ_DAKUTEN>
        ;
    };
  TJ_ZA: tron_za {
      label = "tron_za";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap &kp TJ_SA>
        , <&macro_tap &kp TJ_DAKUTEN>
        ;
    };
  TJ_BE: tron_be {
      label = "tron_be";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap &kp TJ_HE>
        , <&macro_tap &kp TJ_DAKUTEN>
        ;
    };
  TJ_PA: tron_pa {
      label = "tron_pa";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap &kp TJ_HA>
        , <&macro_tap &kp TJ_HANDAKUTEN>
        ;
    };
  TJ_PI: tron_pi {
      label = "tron_pi";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap &kp TJ_HI>
        , <&macro_tap &kp TJ_HANDAKUTEN>
        ;
    };
  TJ_PU: tron_pu {
      label = "tron_pu";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap &kp TJ_FU>
        , <&macro_tap &kp TJ_HANDAKUTEN>
        ;
    };
  TJ_PE: tron_pe {
      label = "tron_pe";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap &kp TJ_HE>
        , <&macro_tap &kp TJ_HANDAKUTEN>
        ;
    };
  TJ_PO: tron_po {
      label = "tron_po";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap &kp TJ_HO>
        , <&macro_tap &kp TJ_HANDAKUTEN>
        ;
    };
  TJ_LKAGIKAKO: tron_lkagikako {
      label = "tron_lkagikako";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_press &kp LSHFT>
        , <&macro_tap &kp TJ_HANDAKUTEN>
        , <&macro_release &kp LSHFT>
        ;
    };
  TJ_RKAGIKAKO: tron_rkagikako {
      label = "tron_rkagikako";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_press &kp LSHFT>
        , <&macro_tap &kp TJ_MU>
        , <&macro_release &kp LSHFT>
        ;
    };
  _EISU: _eisu {
      label = "_eisu";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap &kp LANG2>
        , <&macro_tap &to SDY_L>
        ;
    };
  _KANA: _kana {
      label = "_kana";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap &kp LANG1>
        , <&macro_tap &to TRN_L>
        ;
    };
    googl: googl {
       label = "googl";
       compatible = "zmk,behavior-macro";
       #binding-cells = <0>;
       bindings
         = <&macro_tap &kp LG(C)>
         , <&macro_tap &kp LG(SPACE)>
         , <&macro_tap &kp G &kp SPACE> , <&macro_tap &kp LG(V) &kp RET>
         ;
    };
    gtran: gtran {
       label = "gtran";
       compatible = "zmk,behavior-macro";
       #binding-cells = <0>;
       bindings
           = <&macro_tap &kp LG(C)>
           , <&macro_tap &kp LG(SPACE)>
           , <&macro_tap &kp T &kp SPACE> , <&macro_tap &kp LG(V) &kp RET>
           ;
    };
    defin: defin {
       label = "defin";
       compatible = "zmk,behavior-macro";
       #binding-cells = <0>;
       bindings
           = <&macro_tap &kp LG(C)>
           , <&macro_tap &kp LG(SPACE)>
           , <&macro_tap &kp D &kp SPACE> , <&macro_tap &kp LG(V)>
           , <&macro_wait_time 50>
           , <&kp RET>
           ;
    };
    hash_plus: hash_plus {
       label = "hash_plus";
       compatible = "zmk,behavior-macro";
       #binding-cells = <0>;
       bindings
           = <&macro_tap &kp JP_HASH>
           , <&macro_tap &kp JP_PLUS>
           ;
    };

    mg_x: mg_x {
       label = "mg_x";
       compatible = "zmk,behavior-macro";
       #binding-cells = <0>;
       bindings
           = <&macro_tap &kp X>
           , <&macro_tap &sl MG_X_L>
           ;
    };  
    mg_l: mg_l {
       label = "mg_l";
       compatible = "zmk,behavior-macro";
       #binding-cells = <0>;
       bindings
           = <&macro_tap &kp L>
           , <&macro_tap &sl MG_L_L>
           ;
    };
    mg_u: mg_u {
       label = "mg_u";
       compatible = "zmk,behavior-macro";
       #binding-cells = <0>;
       bindings
           = <&macro_tap &kp U>
           , <&macro_tap &sl MG_U_L>
           ;
    };
    mg_o: mg_o {
       label = "mg_o";
       compatible = "zmk,behavior-macro";
       #binding-cells = <0>;
       bindings
           = <&macro_tap &kp O>
           , <&macro_tap &sl MG_O_L>
           ;
    };
};

  behaviors {
  hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "homerow mods";
      #binding-cells = <2>;
      tapping_term_ms = <240>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };
  hmr: homerow_mods_right {
      compatible = "zmk,behavior-hold-tap";
      label = "homerow mods";
      #binding-cells = <2>;
      tapping_term_ms = <240>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
      hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33>; 
    };
  hml: homerow_mods_left {
     compatible = "zmk,behavior-hold-tap";
      label = "homerow mods";
      #binding-cells = <2>;
      tapping_term_ms = <240>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
      hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 30 31 32 33>; 
    };
  com_quo: comma_quot {
      compatible = "zmk,behavior-mod-morph";
      label = "comma_quot";
      #binding-cells = <0>;
      bindings = <&kp JP_COMMA>, <&kp JP_SQT>;
      mods = <(MOD_LSFT)>;
    };
  dot_dbq: dot_doublequote {
      compatible = "zmk,behavior-mod-morph";
      label = "dot_doublequote";
      #binding-cells = <0>;
      bindings = <&kp JP_DOT>, <&kp JP_DQT>;
      mods = <(MOD_LSFT)>;
    };
  min_qma: min_qma {
      compatible = "zmk,behavior-mod-morph";
      label = "min_qma";
      #binding-cells = <0>;
      bindings = <&kp JP_MINUS>, <&kp JP_QMARK>;
      mods = <(MOD_LSFT)>;
    };
  nav_rep: nav_rep {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      flavor = "hold-preferred";
      tapping-term-ms = <200>;
      quick-tap-ms = <175>;
      bindings = <&mo>, <&key_repeat>;
    };
  ss_mo: ss_mo {
      compatible = "zmk,behavior-hold-tap";
      label = "mo_ss";
      #binding-cells = <2>;
      flavor = "tap-preferred";
      tapping-term-ms = <200>;
      bindings = <&mo>, <&sk>;
    };
  };
    
  keymap {
    compatible = "zmk,keymap";


    magic_sturdy_layer {
      label = "magic_sturdy";
      bindings = <
        &mg_x       &kp M      &mg_l       &kp C        &kp P    &kp B  &kp NUBS     &mg_u       &mg_o       &kp Q
        &hml LSHFT S &hm LALT T &hm LGUI R  &hm LCTRL D  &kp Y    &kp F  &hm RCTRL N  &hm RGUI E  &hm RALT A  &hmr RSHFT I
        &kp V       &kp K      &kp J       &hm HYPER G  &kp W    &kp Z  &hm HYPER H  &com_quo    &dot_dbq    &min_qma
        &lt NUM_L BKSP  &lt SYM_L SPACE &ss_mo EXT_L LSHIFT &nav_rep NAV_L 0
        >;
    };

    tron_base_layer {
      label = "TRN";
      bindings = <
        &kp TJ_RA  &kp TJ_RU  &kp TJ_KO  &kp TJ_HA  &kp TJ_XYO     &kp TJ_KI  &kp TJ_NO  &kp TJ_KU     &kp TJ_A     &kp TJ_RE
        &kp TJ_TA  &kp TJ_TO  &kp TJ_KA  &kp TJ_TE   &kp TJ_MO     &kp TJ_WO  &kp TJ_I   &kp TJ_U      &kp TJ_SHI   &kp TJ_NN
        &kp TJ_MA  &kp TJ_RI  &kp TJ_NI  &kp TJ_SA   &kp TJ_NA     &kp TJ_SU  &kp TJ_TSU &kp TJ_DOUTEN &kp TJ_KUTEN &kp TJ_XTSU
        &trans  &mo TRR_L  &mo TRB_L   &trans
        >;
    };

    tron_blue_layer {
      label = "TRB";
      bindings = <
        &TJ_BI     &TJ_ZO     &TJ_GO  &TJ_BA  &TJ_BO    &kp TJ_E   &kp TJ_KE  &kp TJ_ME         &kp TJ_MU &kp TJ_RO
        &TJ_DA     &TJ_DO     &TJ_GA  &TJ_DE  &TJ_BU    &kp TJ_O   &kp TJ_CHI &kp TJ_CHOUONNPU  &kp TJ_MI &kp TJ_YA
        &kp TJ_XE  &kp TJ_XO  &TJ_ZE  &TJ_ZA  &TJ_BE    &kp TJ_WA  &kp TJ_XI  &kp TJ_XA         &trans    &kp TJ_XU
        &trans &mo TRP_L &trans &trans
        >;
    };

    tron_red_layer {
      label = "TRR";
      bindings = <
        &kp TJ_HI   &kp TJ_SO  &kp TJ_NAKAGURO &kp TJ_XYA  &kp TJ_HO    &TJ_GI    &TJ_GE   &TJ_GU        &trans        &trans
        &kp TJ_NU   &kp TJ_NE  &kp TJ_XYU      &kp TJ_YO   &kp TJ_FU    &kp TJ_O  &TJ_DZI  &TJ_VU        &TJ_JI        &trans
        &kp TJ_XE   &kp TJ_XO  &kp TJ_SE       &kp TJ_YU   &kp TJ_HE    &TJ_ZU    &TJ_DZU  &TJ_LKAGIKAKO &TJ_RKAGIKAKO &kp TJ_XU
        &trans &trans &mo TRP_L &trans
        >;
    };

    tron_purple_layer {
      label = "TRP";
      bindings = <
        &TJ_PI    &trans   &trans   &TJ_PA   &TJ_PO          &trans   &trans        &trans        &trans        &trans
        &trans    &trans   &trans   &trans   &TJ_PU          &kp SPC  &kp LC(JP_J)  &kp LC(JP_K)  &kp LC(JP_L)  &kp LC(JP_SEMI)
        &trans    &trans   &trans   &trans   &TJ_PE          &trans   &kp RET       &trans        &trans        &trans
        &trans &trans &trans &trans
        >;
    };

    nav_layer {
      label = "Nav";
      bindings = <
        &kp LG(Z)  &kp LG(X)  &kp LG(C)   &kp LG(V)   &kp LS(LG(Z))    &kp LS(LG(N5))      &trans      &_EISU        &_KANA        &trans
        &kp LARW   &kp UARW   &kp DARW    &kp RARW    &trans           &trans             &kp RCTRL   &kp RGUI      &kp RALT      &kp RSHFT
        &kp HOME   &kp PG_UP  &kp PG_DN   &kp END     &trans           &kp LS(LA(LG(LC(B)))) &kp C_PP    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE
        &kp ESC     &sl EXT_L          &trans     &trans
        >;
    };

    ext_layer {
      label = "Ext";
      bindings = <
        &kp MEH(X)   &kp MEH(M)  &kp MEH(L)   &kp LS(LA(LG(V)))  &kp MEH(P)             &kp LC(TAB)  &kp TAB   &kp LG(TAB)  &kp LA(TAB)  &trans
        &kp MEH(S)   &kp MEH(T)  &kp MEH(R)   &kp MEH(D)     &kp LS(LA(LG(LC(Y))))      &kp LC(DEL)  &kp DEL   &kp LG(DEL)  &kp LA(DEL)  &trans
        &kp MEH(V)   &kp MEH(K)  &kp MEH(J)   &kp MEH(G)     &kp MEH(W)                 &trans       &googl    &gtran       &defin       &kp CAPS
        &trans &kp MEH(SPC)    &kp MEH(SPC)        &trans
        >;
    };
    
    num_layer {
      label = "Num";
      bindings = <
        &kp JP_QMARK  &kp JP_LBKT  &kp JP_RBKT   &kp JP_COLON  &kp LC(F2)    &kp JP_PLUS   &kp JP_N7  &kp JP_N8  &kp JP_N9  &kp JP_ASTRK
        &kp JP_AMPS   &kp JP_LPAR  &kp JP_RPAR   &kp JP_SEMI   &kp JP_AT     &kp JP_MINUS  &kp JP_N4  &kp JP_N5  &kp JP_N6  &kp JP_SLASH
        &kp JP_DQT    &kp JP_SQT   &kp JP_UNDER  &kp JP_EXL    &kp JP_PIPE   &kp JP_EQUAL  &kp JP_N1  &kp JP_N2  &kp JP_N3  &kp JP_N0
        &trans     &trans       &kp RET      &mo SYM_L
        >;
    };

    sym_layer {
      label = "Sym";
      bindings = <
        &trans  &trans  &trans  &hash_plus  &kp KP_NLCK     &kp LS(LA(N8))  &kp JP_HASH  &kp JP_LT     &kp JP_GT     &kp JP_CARET
        &trans  &trans  &trans  &trans      &kp INS          &kp JP_TILDE    &kp JP_PRNT  &kp JP_LBRLS  &kp JP_RBRLS  &kp JP_GRAVE
        &trans  &trans  &trans  &trans      &trans           &kp NUBS        &kp JP_YEN   &kp JP_DLLR   &kp LA(N3)    &kp LS(LA(N2))
        &trans   &trans   &trans   &trans
        >;
    };

    fun_layer {
      label = "Fun";
      bindings = <
        &trans          &trans         &trans      &trans     &trans    &kp PSCRN       &kp F9     &kp F10    &kp F11     &kp F12
        &trans          &trans         &trans      &trans     &trans    &kp PAUSE_BREAK &kp F5     &kp F6     &kp F7      &kp F8
        &trans          &trans         &trans      &trans     &trans    &kp SLCK        &kp F1     &kp F2     &kp F3      &kp F4
        &none      &none             &trans          &trans
        >;

    };
    ble_layer {
      label = "ble";
      bindings = <
        &bt BT_CLR   &trans        &trans       &trans       &trans         &trans      &trans      &trans     &trans     &trans
        &trans       &trans        &trans       &trans       &trans         &trans      &trans      &trans     &trans     &trans
        &bt BT_SEL 4 &bt BT_SEL 3  &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0   &trans      &trans      &trans     &trans     &trans 
        &trans          &trans       &trans           &trans
        >;
    };
    mg_x_l {
      label = "mg_x_l";
      bindings = <
        &trans  &trans  &trans  &trans  &trans   &trans  &kp T   &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans   &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans   &trans  &trans  &trans  &trans  &trans 
        &trans          &trans       &trans           &trans
        >;
    };
        mg_l_l {
      label = "mg_l_l";
      bindings = <
        &trans  &trans  &trans  &trans  &trans   &trans  &kp R   &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans   &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans   &trans  &trans  &trans  &trans  &trans 
        &trans          &trans       &trans           &trans
        >;
    };
      mg_u_l {
      label = "mg_o_l";
      bindings = <
        &trans  &trans  &trans  &trans  &trans   &trans  &kp E   &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans   &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans   &trans  &trans  &trans  &trans  &trans 
        &trans          &trans       &trans           &trans
        >;
    };
      mg_o_l {
      label = "mg_o_l";
      bindings = <
        &trans  &trans  &trans  &trans  &trans   &trans  &kp A   &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans   &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans   &trans  &trans  &trans  &trans  &trans 
        &trans          &trans       &trans           &trans
        >;
    };

  };
};
