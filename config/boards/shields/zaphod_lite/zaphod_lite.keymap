/*
 * Copyright (c) 2021 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


#define NAV_L 1
#define EXT_L 2
#define NUM_L 3
#define SYM_L 4
#define FUN_L 5

// JIS



// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {
  combos {
    compatible = "zmk,combos";

    fn_mo {
      timeout-ms = <50>;
      key-positions = <1 31>;
      bindings = <&mo FUN_L>;
    };
        
    caps_word_combo {
      timeout-ms = <50>;
      key-positions = <32 33>;
      bindings = <&caps_word>;
    };
	
  };

  behaviors {
  hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "homerow mods";
#binding-cells = <2>;
      tapping_term_ms = <200>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };
  com_quo: comma_quot {
      compatible = "zmk,behavior-mod-morph";
      label = "comma_quot";
#binding-cells = <0>;
      bindings = <&kp COMMA>, <&kp LS(N7)>;
      mods = <(MOD_LSFT)>;
    };
  min_qma: min_qma {
      compatible = "zmk,behavior-mod-morph";
      label = "min_qma";
#binding-cells = <0>;
      bindings = <&kp MINUS>, <&kp QMARK>;
      mods = <(MOD_LSFT)>;
    };
    
  };

  keymap {
    compatible = "zmk,keymap";


    magic_sturdy_layer {
      label = "magic_sturdy";
      bindings = <
        &kp X       &kp M      &kp L       &kp C          &kp P         &kp B            &kp NUBS       &kp U          &kp O       &kp Q
        &hm LSHFT S &hm LALT T &hm LGUI R  &hm LCTRL D    &kp Y         &kp F            &hm RCTRL N    &hm RGUI E     &hm RALT A  &hm  RSHFT I
        &kp V       &kp K      &kp J       &kp G          &kp W         &kp Z            &kp H          &com_quo   &kp DOT  &min_qma
        &lt NUM_L BKSP  &kp SPACE &sk LSHIFT   &lt NAV_L RET
        >;
    };


    nav_layer {
      label = "Nav";
      bindings = <
        &kp LG(Z)  &kp LG(X)  &kp LG(C)   &kp LG(V)   &kp LS(LG(Z))    &trans                &trans      &kp LANG2     &kp LANG1     &trans
        &kp LARW   &kp UARW   &kp DARW    &kp RARW    &trans           &sl EXT_L             &kp RCTRL   &kp RGUI      &kp RALT      &kp RSHFT
        &kp HOME   &kp PG_UP  &kp PG_DN   &kp END     &trans           &kp LS(LA(LG(LC(B)))) &kp C_PP    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE               
        &kp ESC     &kp TAB          &trans     &trans                 
        >;
    };

    ext_layer {
      label = "Ext";
      bindings = <
        &bt BT_CLR   &trans        &trans       &trans       &kp LS(LG(V))  &kp LS(LG(N5))  &trans      &trans     &trans     &trans
        &trans       &trans        &trans       &trans       &trans         &trans          &trans      &trans     &trans     &trans
        &bt BT_SEL 4 &bt BT_SEL 3  &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0   &trans          &trans      &trans     &trans     &kp CAPS
        &trans          &trans       &trans           &trans
        >;
    };

    num_layer {
      label = "Num";
      bindings = <
        &kp LS(SLASH) &kp RBKT   &kp NUHS   &kp SQT    &kp LC(F2)      &kp LS(SEMI)    &kp N7     &kp N8      &kp N9     &kp LS(SQT)
        &kp LS(N6)    &kp LS(N8) &kp LS(N9) &kp SEMI   &kp LS(LBKT)    &kp MINUS       &kp N4     &kp N5      &kp N6     &kp SLASH
        &kp LS(N2)    &kp LS(N7) &kp INT1   &kp LS(N1) &kp LS(INT3)    &kp LS(MINUS)   &kp N1     &kp N2      &kp N3     &kp N0
        &trans     &trans       &kp RET      &mo SYM_L  
        >;
    };

    sym_layer {
      label = "Sym";
      bindings = <
        &kp GRAVE    &kp INT5    &kp INT4   &kp INT2  &trans   &kp LS(LA(N8))  &kp LS(N3)   &kp LT       &kp GT       &kp EQUAL
        &trans       &trans      &trans     &trans    &trans   &kp LS(EQUAL)   &kp LS(N5)   &kp LS(RBKT) &kp LS(NUHS) &kp LS(LBKT)
        &kp LANG5    &kp LANG3   &kp LANG4  &trans    &trans   &kp GRAVE       &kp INT3     &kp LS(N4)   &kp LA(N3)   &kp LS(LA(N2))
        &trans   &trans   &trans         &trans
        >;
    };

    fun_layer {
      label = "Fun";
      bindings = <
        &trans          &trans         &trans      &trans     &trans    &kp PSCRN       &kp F9     &kp F10    &kp F11     &kp F12             
        &trans          &trans         &trans      &trans     &trans    &kp PAUSE_BREAK &kp F5     &kp F6     &kp F7      &kp F8           
        &trans          &trans         &trans      &trans     &trans    &kp SLCK        &kp F1     &kp F2     &kp F3      &kp F4       
        &none      &none             &trans          &trans
        >;
    };
        
  };
};

